{"ast":null,"code":"var _jsxFileName = \"/home/gabriel/Development/code/Phase 2/cheat/Bott-Battlr/src/components/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport BotCollection from \"./BotCollection\";\nimport YourBotArmy from \"./YourBotArmy\";\nimport NavBar from './NavBar';\nimport BotSpecs from \"./BotSpecs\";\nimport { Routes, Route } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [bots, setBots] = useState([]);\n  const [yourBots, setYourBots] = useState([]);\n  const [filteredBots, setFilteredBots] = useState([]);\n  useEffect(() => {\n    fetch(`http://localhost:3000/bots`).then(res => res.json()).then(data => setBots([...data])).catch(err => alert(\"Kindly ensure you are fetching data from port 3000\"));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(BotCollection, {\n          bots: bots,\n          setYourBots: setYourBots,\n          yourBots: yourBots,\n          filteredBots: filteredBots,\n          setFilteredBots: setFilteredBots\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/bots-collection\",\n        element: /*#__PURE__*/_jsxDEV(BotCollection, {\n          bots: bots,\n          setYourBots: setYourBots,\n          yourBots: yourBots,\n          filteredBots: filteredBots,\n          setFilteredBots: setFilteredBots\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/my-bots\",\n        element: /*#__PURE__*/_jsxDEV(YourBotArmy, {\n          yourBots: yourBots,\n          setYourBots: setYourBots\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: `/bot-specs/:botId`,\n        element: /*#__PURE__*/_jsxDEV(BotSpecs, {\n          yourBots: yourBots,\n          setYourBots: setYourBots\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"nHD1pJojwGVKbCUtDu4Y625JYz8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","BotCollection","YourBotArmy","NavBar","BotSpecs","Routes","Route","jsxDEV","_jsxDEV","App","_s","bots","setBots","yourBots","setYourBots","filteredBots","setFilteredBots","fetch","then","res","json","data","catch","err","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","exact","path","element","_c","$RefreshReg$"],"sources":["/home/gabriel/Development/code/Phase 2/cheat/Bott-Battlr/src/components/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport BotCollection from \"./BotCollection\"\nimport YourBotArmy from \"./YourBotArmy\"\nimport NavBar from './NavBar'\nimport BotSpecs from \"./BotSpecs\"\n\nimport {Routes, Route} from \"react-router-dom\"\n\nfunction App() {\n\n  const [bots, setBots] = useState([]);\n  const [yourBots, setYourBots] = useState([]);\n  const [filteredBots, setFilteredBots] = useState([])\n  \n\n  useEffect(\n    () => {\n      fetch(`http://localhost:3000/bots`)\n      .then(res => res.json())\n      .then(data =>  setBots([...data]))\n      .catch(err => alert(\"Kindly ensure you are fetching data from port 3000\"))\n    },[]\n  )\n\n  return (\n    <div>\n\n      <NavBar />\n      \n      <Routes> \n\n        <Route exact path='/' element={\n          <BotCollection bots={bots} setYourBots={setYourBots} yourBots={yourBots} filteredBots={filteredBots} setFilteredBots={setFilteredBots}/>\n        }/>\n\n        <Route exact path='/bots-collection' element={\n          <BotCollection bots={bots} setYourBots={setYourBots} yourBots={yourBots} filteredBots={filteredBots} setFilteredBots={setFilteredBots}/>\n        } />   \n\n        <Route exact path=\"/my-bots\" element={\n          <YourBotArmy yourBots={yourBots} setYourBots={setYourBots}/>\n        } />\n      \n      <Route exact path={`/bot-specs/:botId`} element={\n        <BotSpecs yourBots={yourBots} setYourBots={setYourBots}/>\n      }/>\n\n      </Routes>\n      \n      \n    </div>\n  )\n}\n\nexport default App"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}